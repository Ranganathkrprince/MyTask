package com.niftem.app.service;

import java.util.Map;

import javax.validation.Valid;

import org.springframework.web.multipart.MultipartFile;

import com.niftem.app.entity.AccessLogs;
import com.niftem.app.entity.Colleges;
import com.niftem.app.entity.Degree;
import com.niftem.app.entity.EvaluationType;
import com.niftem.app.entity.FeeType;
import com.niftem.app.entity.HostelFeeType;
import com.niftem.app.entity.Scale;
import com.niftem.app.entity.Section;
import com.niftem.app.entity.StaffType;
import com.niftem.app.entity.University;
import com.niftem.app.entity.User;
import com.niftem.app.model.AboutFeedBackRequest;
import com.niftem.app.model.AcademicCalenderActivityRequest;
import com.niftem.app.model.AcademicYearRequest;
import com.niftem.app.model.ApplicationVersionRequest;
import com.niftem.app.model.BatchRequest;
import com.niftem.app.model.CategoryRequest;
import com.niftem.app.model.CollegesRequest;
import com.niftem.app.model.CourseGroupRequest;
import com.niftem.app.model.CoursesRequest;
import com.niftem.app.model.CoursesTypeRequest;
import com.niftem.app.model.CreateStudentRequest;
import com.niftem.app.model.CreditHoursRquest;
import com.niftem.app.model.DegreeRequest;
import com.niftem.app.model.DepartmentRequest;
import com.niftem.app.model.DesignationRequest;
import com.niftem.app.model.ElectiveGroupRequest;
import com.niftem.app.model.EvaluationTypeRequest;
import com.niftem.app.model.ExamAnnouncementRequest;
import com.niftem.app.model.ExportListRequest;
import com.niftem.app.model.FeeMasterRequest;
import com.niftem.app.model.FeeTypeRequest;
import com.niftem.app.model.FeedbackRequest;
import com.niftem.app.model.HostelConfigureDetailRequest;
import com.niftem.app.model.HostelFeeTypeRequest;
import com.niftem.app.model.HostelRequest;
import com.niftem.app.model.Login;
import com.niftem.app.model.MentorRequest;
import com.niftem.app.model.ProgramTypeRequest;
import com.niftem.app.model.ProgrammeRequest;
import com.niftem.app.model.ProgrammeYearRequest;
import com.niftem.app.model.RegistrationTypeRequest;
import com.niftem.app.model.RoomMasterRequest;
import com.niftem.app.model.SectionRequest;
import com.niftem.app.model.SemesterRegistrationConfigurationRequest;
import com.niftem.app.model.SemesterRequest;
import com.niftem.app.model.StaffTypeRequest;
import com.niftem.app.model.StreamRequest;
import com.niftem.app.model.StudentMentorAllocation;
import com.niftem.app.model.StudentMentorRequest;
import com.niftem.app.model.TeacherCourseMappingRequest;
import com.niftem.app.model.UniversityRequest;
import com.niftem.app.model.UserRequest;

public interface MasterService {

	
	
	Map<String, String> createUniversity( UniversityRequest university);
	Map<String, String> updateUniversity(UniversityRequest university);
	Map<String, String> deleteUniversity(University university);
	Map<String, Object> getUniversity(University university);
	
	Map<String, String> createCollege( CollegesRequest colleges);
	Map<String, String> updateCollege( CollegesRequest colleges);
	Map<String, String> deleteCollege(CollegesRequest colleges);
	Map<String, Object> getCollege(CollegesRequest colleges);
	
	Map<String, String> createCategory(CategoryRequest category);
	Map<String, String> updateCategory(CategoryRequest category);
	Map<String, String> deleteCategory(CategoryRequest category);
	Map<String, Object> getCategory(CategoryRequest category);
	
	Map<String, String> createDegree( DegreeRequest request);
	Map<String, String> updateDegree(  DegreeRequest request);
	Map<String, String> deleteDegree(DegreeRequest request);
	Map<String, Object> getDegree(DegreeRequest request);
	
	
	Map<String, String> createDepartment(DepartmentRequest request);
	Map<String, String> updateDepartment(DepartmentRequest request);
	Map<String, String> deleteDepartment(DepartmentRequest request);
	Map<String, Object> getDepartment(DepartmentRequest request);
	
	
	Map<String, String> createAcademicYear(AcademicYearRequest academicYear);
	Map<String, String> updateAcademicYear(AcademicYearRequest academicYear);
	Map<String, String> deleteAcademicYear(AcademicYearRequest academicYear);
	Map<String, Object> getAcademicYear(AcademicYearRequest academicYear);
	
	Map<String, String> createFeeType(FeeTypeRequest feeType);
	Map<String, String> updateFeeType(FeeTypeRequest request);
	Map<String, String> deleteFeeType(FeeType feeType);
	Map<String, Object> getFeeType(FeeType feeType);
	
	Map<String, String> createProgrammeYear(ProgrammeYearRequest request);
	Map<String, String> updateProgrammeYear( ProgrammeYearRequest request);
	Map<String, String> deleteProgrammeYear(ProgrammeYearRequest request);
	Map<String, Object> getProgrammeYear(ProgrammeYearRequest request);
	
	Map<String, String> createSemster(SemesterRequest semester);
	Map<String, String> updateSemster(SemesterRequest semester);
	Map<String, String> deleteSemster(SemesterRequest semester);
	Map<String, Object> getSemster(SemesterRequest semester);
	
	
	Map<String, String> createSection( SectionRequest request);
	Map<String, String> updateSection( SectionRequest request);
	Map<String, String> deleteSection(SectionRequest request);
	Map<String, Object> getSection(SectionRequest request);
	 
	
	Map<String, String> createCourseGroup(CourseGroupRequest request);
	Map<String, String> updateCourseGroup(CourseGroupRequest request);
	Map<String, String> deleteCourseGroup(CourseGroupRequest request);
	Map<String, Object> getCourseGroup(CourseGroupRequest request);
	
	Map<String, String> createProgramme(ProgrammeRequest request);
	Map<String, String> updateProgramme(ProgrammeRequest request);
	Map<String, String> deleteProgramme(ProgrammeRequest request);
	Map<String, Object> getProgramme(ProgrammeRequest request);

	Map<String, String> createCreditHours(CreditHoursRquest creditHours);
	Map<String, String> updateCreditHours(CreditHoursRquest creditHours);
	Map<String, String> deleteCreditHours(CreditHoursRquest creditHours);
	Map<String, Object> getCreditHours(CreditHoursRquest creditHours);

	Map<String, String> createEvaluationType( EvaluationTypeRequest evaluationType);
	Map<String, String> updateEvaluationType( EvaluationTypeRequest evaluationType);
	Map<String, String> deleteEvaluationType(EvaluationTypeRequest evaluationType);
	Map<String, Object> getEvaluationType(EvaluationTypeRequest evaluationType);
	
	Map<String, String> createStaffType( StaffTypeRequest staffType);
	Map<String, String> updateStaffType( StaffTypeRequest staffType);
	Map<String, String> deleteStaffType(StaffTypeRequest staffType);
	Map<String, Object> getStaffType(StaffTypeRequest staffType);
	
	Map<String, String> createRegistrationType(RegistrationTypeRequest request);
	Map<String, String> updateRegistrationType( RegistrationTypeRequest request);
	Map<String, String> deleteRegistrationType(RegistrationTypeRequest request);
	Map<String, Object> getRegistrationType(RegistrationTypeRequest request);
	
	Map<String, String> createHostelFeeType( HostelFeeTypeRequest hostelFeeType);
	Map<String, String> updateHostelFeeType( HostelFeeTypeRequest hostelFeeType);
	Map<String, String> deleteHostelFeeType(HostelFeeTypeRequest request);
	Map<String, Object> getHostelFeeType(HostelFeeTypeRequest hostelFeeType);
	
	Map<String, String> createRoomMaster(RoomMasterRequest roomMaster);
	Map<String, String> updateRoomMaster(RoomMasterRequest roomMaster);
	Map<String, String> deleteRoomMaster(RoomMasterRequest roomMaster);
	Map<String, Object> getRoomMaster(RoomMasterRequest roomMaster);
	
	Map<String, String> createDesignation(DesignationRequest request);
	Map<String, String> updateDesignation(DesignationRequest request);
	Map<String, String> deleteDesignation(DesignationRequest request);
	Map<String, Object> getDesignation(DesignationRequest request);
	
	/*
	 * Map<String, String> createDiscipline(DisciplineRequest request); Map<String,
	 * String> updateDiscipline(DisciplineRequest request); Map<String, String>
	 * deleteDiscipline(DisciplineRequest request); Map<String, Object>
	 * getDiscipline(DisciplineRequest request);
	 */
	Map<String, String> createUser(UserRequest request);
	Map<String, String> updateUser(@Valid UserRequest request);
	
	Map<String, String> deleteUser(UserRequest request);
	Map<String, Object> getUser(UserRequest request);
	
	
	
	Map<String, String> createCourses(CoursesRequest request);
	Map<String, String> updateCourses(CoursesRequest request);
	Map<String, String> deleteCourses(CoursesRequest request);
	Map<String, Object> getCourses(CoursesRequest request);
	
	Map<String, String> createExamAnnouncement(ExamAnnouncementRequest request);
	Map<String, String> updateExamAnnouncement(ExamAnnouncementRequest request);
	Map<String, String> deleteExamAnnouncement(ExamAnnouncementRequest request);
	Map<String, Object> getExamAnnouncement(ExamAnnouncementRequest request);
	Map<String, Object> getLiveExamDetails(ExamAnnouncementRequest request);
	
	Map<String, String> createSemesterRegistrationConfiguration(SemesterRegistrationConfigurationRequest request);
	Map<String, String> updateSemesterRegistrationConfiguration(SemesterRegistrationConfigurationRequest request);
	Map<String, String> deleteSemesterRegistrationConfiguration(SemesterRegistrationConfigurationRequest request);
	Map<String, Object> getSemesterRegistrationConfiguration(SemesterRegistrationConfigurationRequest request);
	
	Map<String, String> createAccessLogs(AccessLogs request);
	Map<String, Object> getAccessLogs(AccessLogs request);
	

	/*
	 * Map<String, String> createStudentIdFormat(StudentIdSettingRequest request);
	 * Map<String, String> updateStudentIdFormat(StudentIdSettingRequest request);
	 * Map<String, String> deleteStudentIdFormat(StudentIdSettingRequest request);
	 * Map<String, Object> getStudentIdFormat(StudentIdSettingRequest request);
	 */
	
	Map<String, String> createHostel(HostelRequest request);
	Map<String, String> updateHostel(HostelRequest request);
	Map<String, String> deleteHostel(HostelRequest request);
	Map<String, Object> getHostel(HostelRequest request);
	
	
	Map<String, String> createScale(Scale scale);
	Map<String, String> updateScale(Scale scale);
	Map<String, String> deleteScale(Scale scale);
	Map<String, Object> getScale(Scale scale);
	
	Map<String, String> createAboutFeedBack(AboutFeedBackRequest request);
	Map<String, String> updateAboutFeedBack(AboutFeedBackRequest request);
	Map<String, String> deleteAboutFeedBack(AboutFeedBackRequest request);
	Map<String, Object> getAboutFeedBack(AboutFeedBackRequest request);
	
	Map<String, String> createFeedBack(FeedbackRequest request);
	
	Map<String, Object> createTeacherCourseMapping(TeacherCourseMappingRequest request);
	Map<String, Object> updateTeacherCourseMapping(TeacherCourseMappingRequest request);
	Map<String, String> deleteTeacherCourseMapping(TeacherCourseMappingRequest request);
	Map<String, Object> getTeacherCourseMapping(TeacherCourseMappingRequest request);
	
	Map<String, String> checkFBSubmitted(FeedbackRequest request);
	Map<String, Object> validateAboutFeedback(FeedbackRequest request);
	Map<String, Object> getStaffList(FeedbackRequest request);
	Map<String, Object> uploadImage(MultipartFile exfile, Long id, String userType);
	
	//stream
	Map<String, String> createstream(StreamRequest request);
	Map<String, String> updateStream(StreamRequest request);
	Map<String, Object> getstream(StreamRequest request);
	Map<String, String> deletestream(StreamRequest request);
	
	
	
	Map<String, String> createBatch( BatchRequest request);
	Map<String, Object> getBatch(BatchRequest request);
	Map<String, String> updateBatch( BatchRequest request);
	Map<String, String> deleteBatch(BatchRequest request);
	
	
	
	
	Map<String, String> createProgramType( ProgramTypeRequest request);
	Map<String, Object> getProgramType(ProgramTypeRequest request);
	Map<String, String> deleteProgramType(ProgramTypeRequest request);
	Map<String, String> updateProgramType( ProgramTypeRequest request);
	
	
	Map<String, String> createCoursesType( CoursesTypeRequest request);
	Map<String, Object> getCoursesType(CoursesTypeRequest request);
	Map<String, String> deleteCoursesType(CoursesTypeRequest request);
	Map<String, String> updateCoursesType( CoursesTypeRequest request);
	
	
	Map<String, String> createAcademicCalenderActivity( AcademicCalenderActivityRequest request);
	Map<String, Object> getAcademicCalenderActivity(AcademicCalenderActivityRequest request);
	Map<String, String> deleteAcademicCalenderActivity(AcademicCalenderActivityRequest request);
	Map<String, String> updateAcademicCalenderActivity( AcademicCalenderActivityRequest request);
	
	
	
	Map<String, String> createelectiveGroup(ElectiveGroupRequest request);
	Map<String, Object> getelectiveGroup(ElectiveGroupRequest request);
	Map<String, String> deleteelectiveGroup(ElectiveGroupRequest request);
	Map<String, String> updateelectiveGroup( ElectiveGroupRequest request);
	
	
	Map<Object, Object> electiveGroupMapping(ElectiveGroupRequest request);
	
	Map<String, Object> getElectiveGroupName(ElectiveGroupRequest request);
	
	Map<String, Object> courseOnGroupId(ElectiveGroupRequest request);
	
	
	

	
	Map<String, String> createMentor(@Valid MentorRequest request);
	Map<String, Object> getMentor(MentorRequest request);
	Map<String, String> deleteMentor(MentorRequest request);
	Map<String, String> updateMentor(@Valid MentorRequest request);
	
	Map<Object, Object> resetPassword(Login request);
	
	
	
	
	
	Map<String, String> updateStudentMentor(StudentMentorRequest request);
	
	Map<Object, Object> changePassword(Login request);
	Map<Object, Object> forgetPassword(Login request);
	

	
	Map<String,String> createMentorAllocation(StudentMentorAllocation request);
	Map<String, String> createhostelConfiguration(@Valid HostelConfigureDetailRequest request);
	Map<String, String> updateStudentProfilebyStudent( CreateStudentRequest request);
	Map<String, String> updateStudentSection(CreateStudentRequest request);
	Map<String, Object> getExportList(ExportListRequest request);
	Map<String, String> createInternalMarksConfiguration( SemesterRegistrationConfigurationRequest request);
	Map<String, String> updateInternalMarksConfiguration( SemesterRegistrationConfigurationRequest request);
	Map<String, String> deleteInternalMarksConfiguration(SemesterRegistrationConfigurationRequest request);
	Map<String, Object> getInternalMarksConfiguration(SemesterRegistrationConfigurationRequest request);
	Map<String, Object> getAcademicyearActivityBasedOnAcademicYear(AcademicCalenderActivityRequest request);
	Map<String, Object> getActivityBasedOnAcademicYearANDISEven(AcademicCalenderActivityRequest request);
	
	
	
	
	
	Map<String, String> createApplicationVersion(@Valid ApplicationVersionRequest apprequest);
	Map<String, String> updateApplicationVersion(@Valid ApplicationVersionRequest apprequest);
	Map<String, String> deleteApplicationVersion(ApplicationVersionRequest apprequest);
	Map<String, Object> getApplicationVersion(ApplicationVersionRequest apprequest);
	
	
	Map<String, Object> ApplicationVersionstatus( ApplicationVersionRequest apprequest);
	Map<Object, Object> AdminPassword(Login request);
	
	Map<String, String> createFeedbackConfig( SemesterRegistrationConfigurationRequest request);
	Map<String, String> updateFeedbackConfig( SemesterRegistrationConfigurationRequest request);
	Map<String, String> deleteFeedbackConfig(SemesterRegistrationConfigurationRequest request);
	Map<String, Object> getFeedbackConfig(SemesterRegistrationConfigurationRequest request);

}
