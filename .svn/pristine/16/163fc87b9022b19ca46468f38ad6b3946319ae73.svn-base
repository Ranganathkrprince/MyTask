package com.niftem.app.controller;

import java.util.Map;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.niftem.app.model.AttendenceRequest;
import com.niftem.app.model.ClassTimeTableRequest;
import com.niftem.app.model.EligibleListforExamRequest;
import com.niftem.app.model.NoduR;
import com.niftem.app.model.SemesterEligibility;
import com.niftem.app.model.TeachingSummaryRequest;
import com.niftem.app.service.ClassAcademicService;

@RequestMapping("/api/classacademic/")
@CrossOrigin(origins = "*", allowedHeaders = "*")
@RestController
@Validated
public class ClassAcademic {

	@Autowired
	ClassAcademicService classacademic;
	
	// code for class time table	
	@PostMapping(value = "/classTimeTable/create")
	public Map<String, Object> classTimeTable(@Valid @RequestBody  ClassTimeTableRequest request) {
		  return classacademic.createClassTimeTable(request);				
	}
	
	@PostMapping(value = "/classTimeTable/generate")
	public Map<String, Object> generateclassTimeTable(@Valid @RequestBody  ClassTimeTableRequest request) {
		  return classacademic.generateclassTimeTable(request);				
	}
	
	@PostMapping(value = "/classTimeTable/get")
	public Map<String, Object> getclassTimeTable(@Valid @RequestBody  ClassTimeTableRequest request) {
		  return classacademic.getclassTimeTable(request);				
	}
	
	@PostMapping(value = "/classTimeTable/update")
	public Map<String, Object> updateclassTimeTable(@RequestBody  ClassTimeTableRequest request) {
		  return classacademic.updateclassTimeTable(request);				
	}
	
	@PostMapping(value = "/classTimeTable/checkTimeTableStatus")
	public Map<String, Object> checkTimeTableStatus(@Valid @RequestBody  ClassTimeTableRequest request) {
		  return classacademic.checkTimeTableStatus(request);				
	}
	
	@PostMapping(value = "/getMothName")
	public Map<String, Object> getMothName() {
		  return classacademic.getMonthName();				
	}
	
	
	@PostMapping(value = "/teachingSummary/create")
	public Map<String, Object> createTeachingSummary(@Valid @RequestBody  TeachingSummaryRequest request) {
		  return classacademic.createTeachingSummary(request);				
	}
	
	@PostMapping(value = "/teachingSummary/update")
	public Map<String, Object> updateTeachingSummary(@Valid @RequestBody  TeachingSummaryRequest request) {
		  return classacademic.updateTeachingSummary(request);				
	}
	
	@PostMapping(value = "/teachingSummary/get")
	public Map<String, Object> getTeachingSummary() {
		  return classacademic.getTeachingSummary();				
	}
	
	@PostMapping(value = "/teachingSummary/delete")
	public Map<String, Object> deleteTeachingSummary(@RequestBody  TeachingSummaryRequest request) {
		  return classacademic.deleteTeachingSummary(request);				
	}
	
	@PostMapping(value = "/classAttendance/create")
	public Map<String, Object> classAttendance(@RequestBody  ClassTimeTableRequest request) {
		  return classacademic.createClassAttendance(request);				
	}
	
	@PostMapping(value = "/getEligibleListforExam")
	public Map<String, Object> getEligibleListforExam(@Valid @RequestBody  EligibleListforExamRequest request) {
		  return classacademic.getEligibleListforExam(request);				
	}
	@PostMapping(value = "/generateAttendence")
	public Map<String, Object> generateAttendence(@Valid @RequestBody  AttendenceRequest request) {
		  return classacademic.generateAttendence(request);				
	}
	@PostMapping(value = "/checkAttendenceEligibility")
	public Map<String, Object> checkAttendenceEligibility(@Valid @RequestBody  SemesterEligibility request) {
		  return classacademic.checkAttendenceEligibility(request);				
	}
	
	
	@PostMapping(value = "/getstudentEligiblelist")
	public Map<String, Object> getstudentEligiblelist(@Valid @RequestBody  SemesterEligibility request) {
		  return classacademic.getstudentEligiblelist(request);				
	}
	
	@PostMapping(value = "/attendenceCalculator")
	public Map<String, Object> attendenceCalculator(@RequestBody  AttendenceRequest request) {
		  return classacademic.attendenceCalculator(request);				
	}
	
	
	@PostMapping(value = "/studentListForApprove")
	public Map<String, Object> studentListForApprove( @RequestBody  SemesterEligibility request) {
		  return classacademic.studentListForApprove(request);				
	}
	
	
	@PostMapping(value = "/approveStudent")
	public Map<String, Object> approveStudent( @RequestBody  SemesterEligibility request) {
		  return classacademic.approveStudent(request);				
	}
	
	@PostMapping(value = "/approveStudentwithPenalty")
	public Map<String, Object> approveStudentwithPenalty( @RequestBody  SemesterEligibility request) {
		  return classacademic.approveStudentwithPenalty(request);				
	}
	
	@PostMapping(value = "/eligibleList")
	public Map<String, Object> eligibleList( @RequestBody  SemesterEligibility request) {
		  return classacademic.eligibleList(request);				
	}
	
	@PostMapping(value = "/nonEligibleList")
	public Map<String, Object> nonEligibleList( @RequestBody  SemesterEligibility request) {
		  return classacademic.nonEligibleList(request);				
	}
	
	@PostMapping(value = "/sendNonEligibleEmail")
	public Map<String, Object> sendNonEligibleEmail( @RequestBody  SemesterEligibility request) {
		  return classacademic.sendNonEligibleEmail(request);				
	}
	
	@PostMapping(value = "/noDuesConfiguration/create")
	public Map<String, Object> noDuesConfiguration( @RequestBody  NoduR request) {
		  return classacademic.noDuesConfiguration(request);				
	}
	
	@PostMapping(value = "/noDuesConfiguration/update")
	public Map<String, Object> updatenoDuesConfiguration( @RequestBody  NoduR request) {
		  return classacademic.updatenoDuesConfiguration(request);				
	}
	
	@PostMapping(value = "/noDuesConfiguration/get")
	public Map<String, Object> getnoDuesConfiguration( @RequestBody  NoduR request) {
		  return classacademic.getnoDuesConfiguration(request);				
	}
	
	@PostMapping(value = "/getStudentForNoDues")
	public Map<String, Object> getStudentForNoDues( @RequestBody  SemesterEligibility request) {
		  return classacademic.getStudentForNoDues(request);				
	}
	
	@PostMapping(value = "/noDuesApprove")
	public Map<String, Object> noDuesApprove( @RequestBody  SemesterEligibility request) {
		  return classacademic.noDuesApprove(request);				
	}
	
	@PostMapping(value = "/noDuesListForStudent")
	public Map<String, Object> noDuesListForStudent( @RequestBody  SemesterEligibility request) {
		  return classacademic.noDuesListForStudent(request);				
	}
}
