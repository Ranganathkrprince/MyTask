package com.niftem.app.repository;

import java.util.Date;
import java.util.List;
import java.util.Optional;

import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.transaction.annotation.Transactional;

import com.niftem.app.entity.StudentEnrollementNo;

public interface StudentEnrollementNoRepository extends CrudRepository<StudentEnrollementNo, Long>{

	
	List<StudentEnrollementNo> findByExIsDelete(boolean b);

	Optional<StudentEnrollementNo> findByExIsDeleteAndExIsActiveAndCollegesIdAndDegreeId(boolean b, boolean c,Long colleges, Long degree);

	Optional<StudentEnrollementNo> findByExIsDeleteAndExIsActiveAndCollegesIdAndDegreeIdAndExIdStartWith(boolean b,boolean c, Long colleges, Long degree, String exIdStartWith);

	

//	@Query(value = "select * from  ex_student_rollno where  ex_is_delete =?1 and ex_is_active =?3 and  colleges_id = ?3 and degree_id =?4 and ex_name like %?5%", nativeQuery = true)
	//Optional<StudentEnrollementNo> getRecord(boolean delete, boolean active,Long colleges, Long degree , String name);

	Optional<StudentEnrollementNo> findByExIsDeleteAndExIsActiveAndCollegesIdAndDegreeIdAndExNameContaining(boolean b, boolean c,Long colleges, Long degree, String name);


	@Modifying
	@Transactional
	@Query(value = "update ex_student_enrollementno set ex_is_delete = ?1 , ex_is_active = ?2 where id =?3", nativeQuery = true)
	int deleteStudentEnrollment(Boolean exIsDelete, Boolean is_active, Long id);

	@Modifying
	@Transactional
	@Query(value = "update ex_student_enrollementno set ex_id_start_with = ?1 ,ex_is_active = ?2  , ex_name =?3 ,ex_update_date =?4 , colleges_id =?5 , degree_id =?6 where id =?7", nativeQuery = true)
	int updateStudentEnrollementNo(String exIdStartWith, Boolean exIsActive, String exName, Date date, Long colleges,Long degree, Long id);

}
