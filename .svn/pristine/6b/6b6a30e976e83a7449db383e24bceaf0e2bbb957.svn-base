package com.niftem.app.entity;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

@Entity
@Table(name = "ex_supplementary_registration")
public class SupplementaryRegistration {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;

	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	@JoinColumn(name = "academicyear_id", nullable = false)
	private AcademicYear academicYear;

	@JoinColumn(name = "colleges_id", nullable = false)
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private Colleges colleges;

	@JoinColumn(name = "degree_id", nullable = false)
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private Degree degree;
	
	@JoinColumn(name = "courses_id", nullable = false)
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private Courses courses;
	
	@JoinColumn(name = "semester_id", nullable = false)
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private Semster semester;

	@JoinColumn(name = "student_admission_id", nullable = false)
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private Studentadmission studentadmission;

	@JoinColumn(name = "programmeyear_id", nullable = false)
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private ProgrammeYear programmeYear;

	@JoinColumn(name = "registration_type_id", nullable = false)
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private RegistrationType registration;
	
	
	@Column(columnDefinition = "BOOLEAN DEFAULT false")
	private Boolean exIsActive;

	@Column(columnDefinition = "BOOLEAN DEFAULT false")
	private Boolean exIsDelete;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ex_create_date", columnDefinition = "DATETIME")
	private Date exCreateDate;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ex_update_date", columnDefinition = "DATETIME")
	private Date exUpdateDate;
	
	@JoinColumn(name = "exam_announcement_id", nullable = false)
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private ExamAnnouncement examAnnouncement;

	public Long getId() {
		return id;
	}

	public AcademicYear getAcademicYear() {
		return academicYear;
	}

	public Colleges getColleges() {
		return colleges;
	}

	public Degree getDegree() {
		return degree;
	}

	public Courses getCourses() {
		return courses;
	}

	public Semster getSemester() {
		return semester;
	}

	public Studentadmission getStudentadmission() {
		return studentadmission;
	}

	public ProgrammeYear getProgrammeYear() {
		return programmeYear;
	}

	public RegistrationType getRegistration() {
		return registration;
	}

	public Boolean getExIsActive() {
		return exIsActive;
	}

	public Boolean getExIsDelete() {
		return exIsDelete;
	}

	public Date getExCreateDate() {
		return exCreateDate;
	}

	public Date getExUpdateDate() {
		return exUpdateDate;
	}

	public ExamAnnouncement getExamAnnouncement() {
		return examAnnouncement;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public void setAcademicYear(AcademicYear academicYear) {
		this.academicYear = academicYear;
	}

	public void setColleges(Colleges colleges) {
		this.colleges = colleges;
	}

	public void setDegree(Degree degree) {
		this.degree = degree;
	}

	public void setCourses(Courses courses) {
		this.courses = courses;
	}

	public void setSemester(Semster semester) {
		this.semester = semester;
	}

	public void setStudentadmission(Studentadmission studentadmission) {
		this.studentadmission = studentadmission;
	}

	public void setProgrammeYear(ProgrammeYear programmeYear) {
		this.programmeYear = programmeYear;
	}

	public void setRegistration(RegistrationType registration) {
		this.registration = registration;
	}

	public void setExIsActive(Boolean exIsActive) {
		this.exIsActive = exIsActive;
	}

	public void setExIsDelete(Boolean exIsDelete) {
		this.exIsDelete = exIsDelete;
	}

	public void setExCreateDate(Date exCreateDate) {
		this.exCreateDate = exCreateDate;
	}

	public void setExUpdateDate(Date exUpdateDate) {
		this.exUpdateDate = exUpdateDate;
	}

	public void setExamAnnouncement(ExamAnnouncement examAnnouncement) {
		this.examAnnouncement = examAnnouncement;
	}

	@Override
	public String toString() {
		return "SupplementaryRegistration [id=" + id + ", academicYear=" + academicYear + ", colleges=" + colleges
				+ ", degree=" + degree + ", courses=" + courses + ", semester=" + semester + ", studentadmission="
				+ studentadmission + ", programmeYear=" + programmeYear + ", registration=" + registration
				+ ", exIsActive=" + exIsActive + ", exIsDelete=" + exIsDelete + ", exCreateDate=" + exCreateDate
				+ ", exUpdateDate=" + exUpdateDate + ", examAnnouncement=" + examAnnouncement + "]";
	}
	
	
	
}
