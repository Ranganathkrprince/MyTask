package com.niftem.app.entity;

import java.util.Date;
import java.util.LinkedList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

@Entity
@Table(name = "ex_academic_calenderactivity")
public class AcademicCalenderActivity {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

   @Column(columnDefinition="TEXT")
	private String exName;
	
	@Column(columnDefinition="BOOLEAN DEFAULT false")
    private Boolean exIsActive;
	
	@Column(columnDefinition="BOOLEAN DEFAULT false")
	private Boolean exIsDelete;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ex_create_date", columnDefinition = "DATETIME")
	private Date exCreateDate;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ex_update_date", columnDefinition = "DATETIME")
	private Date exUpdateDate;
	
	@Column(columnDefinition="TEXT")
	private String exDescription;

	private String exIdentifier;	
	 
	@ManyToOne( optional = false)
	@JoinColumn(name = "academicYear_id", nullable = false)
	private AcademicYear academicYear;
	 
	@Column(columnDefinition = "BOOLEAN DEFAULT false")
	private Boolean exIsEven;

	public Long getId() {
		return id;
	}

	public String getExName() {
		return exName;
	}

	public Boolean getExIsActive() {
		return exIsActive;
	}

	public Boolean getExIsDelete() {
		return exIsDelete;
	}

	public Date getExCreateDate() {
		return exCreateDate;
	}

	public Date getExUpdateDate() {
		return exUpdateDate;
	}

	public String getExDescription() {
		return exDescription;
	}

	public String getExIdentifier() {
		return exIdentifier;
	}

	public AcademicYear getAcademicYear() {
		return academicYear;
	}

	public Boolean getExIsEven() {
		return exIsEven;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public void setExName(String exName) {
		this.exName = exName;
	}

	public void setExIsActive(Boolean exIsActive) {
		this.exIsActive = exIsActive;
	}

	public void setExIsDelete(Boolean exIsDelete) {
		this.exIsDelete = exIsDelete;
	}

	public void setExCreateDate(Date exCreateDate) {
		this.exCreateDate = exCreateDate;
	}

	public void setExUpdateDate(Date exUpdateDate) {
		this.exUpdateDate = exUpdateDate;
	}

	public void setExDescription(String exDescription) {
		this.exDescription = exDescription;
	}

	public void setExIdentifier(String exIdentifier) {
		this.exIdentifier = exIdentifier;
	}

	public void setAcademicYear(AcademicYear academicYear) {
		this.academicYear = academicYear;
	}

	public void setExIsEven(Boolean exIsEven) {
		this.exIsEven = exIsEven;
	}

	@Override
	public String toString() {
		return "AcademicCalenderActivity [id=" + id + ", exName=" + exName + ", exIsActive=" + exIsActive
				+ ", exIsDelete=" + exIsDelete + ", exCreateDate=" + exCreateDate + ", exUpdateDate=" + exUpdateDate
				+ ", exDescription=" + exDescription + ", exIdentifier=" + exIdentifier + ", academicYear="
				+ academicYear + ", exIsEven=" + exIsEven + "]";
	}

	
	
}
